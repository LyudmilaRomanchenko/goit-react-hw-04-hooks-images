{"version":3,"sources":["components/Modal/Modal.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css","components/Spinner/Spinner.module.css","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","services/img-api.js","components/Button/Button.js","components/Spinner/Spinner.js","App.js","index.js","components/ImageGallery/ImageGallery.module.css"],"names":["module","exports","Searchbar","onSubmit","useState","search","setSearch","className","s","SearchForm","e","preventDefault","trim","console","log","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","name","value","autoComplete","autoFocus","placeholder","onChange","currentTarget","toLowerCase","prototype","PropTypes","func","isRequired","ImageGalleryItem","webformatURL","largeImageURL","onClick","src","alt","ImageGalleryItemImage","string","ImageGallery","data","handleClickImg","map","id","arrayOf","shape","number","modalRoot","document","querySelector","Modal","largeImg","handleKeyDown","code","useEffect","window","addEventListener","removeEventListener","createPortal","Overlay","target","API_KEY","BASE_URL","nextQuery","nextPage","a","url","fetch","response","json","apiFirst","fetchApi","Button","handleButtonLoadMore","Spinner","Loader","color","height","width","timeout","App","page","setPage","query","setQuery","setData","showModal","setShowModal","setLargeImg","status","setStatus","error","setError","API","then","hits","catch","finally","scrollTo","top","documentElement","scrollHeight","behavior","length","imgForModal","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1072dca0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2B9VW\",\"Modal\":\"Modal_Modal__2WS9y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3xVd6\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__1lgAK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__17_fV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__3AxMC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__2G0r7\",\"SearchForm\":\"Searchbar_SearchForm__193de\",\"SearchFormButton\":\"Searchbar_SearchFormButton__24As-\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__3WLtN\",\"SearchFormInput\":\"Searchbar_SearchFormInput__1G-Dw\",\"SearchFormIput\":\"Searchbar_SearchFormIput__20Xx8\"};","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Searchbar.module.css\";\r\n\r\nfunction Searchbar({ onSubmit }) {\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  // Контролируем изминения запроса в инпуте и делаем нечуствительным к регистру (приводим к нижнему регистру)\r\n  const handleChange = (e) => {\r\n    setSearch(e.currentTarget.value.toLowerCase());\r\n    // this.setState({\r\n    //   search: e.currentTarget.value.toLowerCase(),\r\n    // });\r\n  };\r\n\r\n  // Сабмит формы\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Если пустая строка запрос не передаем\r\n    if (search.trim() === \"\") {\r\n      console.log(\"Пустая строка\");\r\n      return;\r\n    }\r\n\r\n    // Передаем результат запроса в App.js\r\n    onSubmit(search);\r\n  };\r\n\r\n  return (\r\n    <header className={s.Searchbar}>\r\n      <form className={s.SearchForm} onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className={s.SearchFormButton}>\r\n          <span className={s.SearchFormButtonLabel}>Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className={s.SearchFormInput}\r\n          type=\"text\"\r\n          name=\"search\"\r\n          value={search}\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={handleChange}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Searchbar;\r\n\r\nSearchbar.prototype = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./ImageGalleryItem.module.css\";\r\n\r\nfunction ImageGalleryItem({ webformatURL, largeImageURL, onClick }) {\r\n  return (\r\n    <img\r\n      src={webformatURL}\r\n      alt={largeImageURL}\r\n      className={s.ImageGalleryItemImage}\r\n      onClick={onClick}\r\n    />\r\n  );\r\n}\r\n\r\nImageGalleryItem.prototype = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n\r\n//\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./ImageGallery.module.css\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem\";\r\n// import Button from \"../Button\";\r\n//Лоадер\r\n// import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n// import Loader from \"react-loader-spinner\";\r\n\r\nfunction ImageGallery({ data, handleClickImg }) {\r\n  console.log(data);\r\n  return (\r\n    <div>\r\n      <ul className={s.ImageGallery}>\r\n        {data.map(({ id, webformatURL, largeImageURL }) => (\r\n          <li key={id} className={s.ImageGalleryItem}>\r\n            <ImageGalleryItem\r\n              webformatURL={webformatURL}\r\n              largeImageURL={largeImageURL}\r\n              onClick={handleClickImg}\r\n            />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nImageGallery.prototype = {\r\n  data: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n    }).isRequired\r\n  ),\r\n  handleClickImg: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n\r\n///////////////////////////////////////////////////////////////////////////\r\n\r\n// import { Component } from \"react\";\r\n// import PropTypes from \"prop-types\";\r\n// import s from \"./ImageGallery.module.css\";\r\n// import ImageGalleryItem from \"../ImageGalleryItem\";\r\n// import Button from \"../Button\";\r\n// //Лоадер\r\n// import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n// import Loader from \"react-loader-spinner\";\r\n\r\n// const API_KEY = \"23052937-32fb9bd6f4b84b12682be3748\";\r\n// const BASE_URL = `https://pixabay.com/api`;\r\n\r\n// class ImageGallery extends Component {\r\n//   static defaultProps = {\r\n//     query: PropTypes.string.isRequired,\r\n//     page: PropTypes.number.isRequired,\r\n//     onClick: PropTypes.func.isRequired,\r\n//   };\r\n//   state = {\r\n//     page: 1,\r\n//     data: [],\r\n\r\n//     // error: null,\r\n//     status: \"idle\",\r\n//   };\r\n\r\n//   componentDidUpdate(prevProps, prevState) {\r\n//     const prevQuery = prevProps.query;\r\n//     const nextQuery = this.props.query;\r\n\r\n//     // const prevPage = prevProps.page;\r\n//     // const nextPage = this.props.page;\r\n\r\n//     const prevPage = prevState.page;\r\n//     const nextPage = this.state.page;\r\n//     console.log(prevPage);\r\n//     console.log(nextPage);\r\n//     console.log(this.props.page);\r\n\r\n//     const url = `${BASE_URL}/?q=${nextQuery}&page=${nextPage}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\r\n//     // const url2 = `${BASE_URL}/?q=${nextQuery}&page=${this.props.page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\r\n\r\n//     if (prevQuery !== nextQuery) {\r\n//       this.setState({ page: this.props.page, status: \"pending\" });\r\n\r\n//       fetch(url)\r\n//         .then((response) => response.json())\r\n//         .then(({ hits }) => {\r\n//           console.log(hits);\r\n//           this.setState({ data: hits, status: \"resolved\" });\r\n//         })\r\n//         .catch((error) => this.setState({ error }));\r\n//       return;\r\n//     }\r\n\r\n//     if (prevPage !== nextPage && prevQuery === nextQuery) {\r\n//       this.setState({ page: nextPage, status: \"pending\" });\r\n\r\n//       fetch(url)\r\n//         .then((response) => response.json())\r\n//         .then(({ hits }) => {\r\n//           console.log(hits);\r\n//           this.setState((prevState) => ({\r\n//             data: [...prevState.data, ...hits],\r\n//             status: \"resolved\",\r\n//           }));\r\n//         })\r\n//         .catch((error) => this.setState({ error }));\r\n//       return;\r\n//     }\r\n//   }\r\n\r\n//   handleButtonLoadMore = () => {\r\n//     console.log(\"Кнопка показать болше\");\r\n//     console.log(this.state.page);\r\n\r\n//     this.setState(({ page }) => ({\r\n//       page: page + 1,\r\n//     }));\r\n//     console.log(this.state.page);\r\n//   };\r\n//   //////////////\r\n\r\n//   // handleClickImg = (e) => {\r\n//   //   console.log(e.currentTarget.alt);\r\n//   //   console.log(\"Modal\");\r\n//   // };\r\n\r\n//   render() {\r\n//     /////////////////////\r\n//     // window.scrollTo({\r\n//     //   top: document.documentElement.scrollHeight,\r\n//     //   behavior: \"smooth\",\r\n//     // });\r\n//     /////////////////\r\n//     const { data, status } = this.state;\r\n\r\n//     console.log(data.length);\r\n\r\n//     if (status === \"idle\") {\r\n//       return <h2>Enter your request.</h2>;\r\n//     }\r\n\r\n//     if (status === \"pending\") {\r\n//       return (\r\n//         <Loader\r\n//           type=\"Puff\"\r\n//           color=\"#00BFFF\"\r\n//           height={100}\r\n//           width={100}\r\n//           timeout={3000} //3 secs\r\n//         />\r\n//       );\r\n//     }\r\n\r\n//     if (status === \"resolved\") {\r\n//       return (\r\n//         <div>\r\n//           <ul className={s.ImageGallery}>\r\n//             {data.map(({ id, webformatURL, largeImageURL }) => (\r\n//               <li key={id} className={s.ImageGalleryItem}>\r\n//                 <ImageGalleryItem\r\n//                   webformatURL={webformatURL}\r\n//                   largeImageURL={largeImageURL}\r\n//                   onClick={this.props.onClick}\r\n//                 />\r\n//               </li>\r\n//             ))}\r\n//           </ul>\r\n\r\n//           {data.length >= 12 && (\r\n//             <Button handleButtonLoadMore={this.handleButtonLoadMore} />\r\n//           )}\r\n//         </div>\r\n//       );\r\n//     }\r\n//   }\r\n// }\r\n\r\n// export default ImageGallery;\r\n","import { useEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Modal.module.css\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nfunction Modal({ largeImg, onClick }) {\r\n  const handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      console.log(\"Нажали Escape\");\r\n\r\n      onClick();\r\n    }\r\n  };\r\n\r\n  const handleBackdrop = (e) => {\r\n    if (e.currentTarget === e.target) {\r\n      console.log(\"Нажали Backdrop\");\r\n\r\n      onClick();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n  }, []);\r\n\r\n  window.removeEventListener(\"keydown\", handleKeyDown);\r\n\r\n  return createPortal(\r\n    <div className={s.Overlay} onClick={handleBackdrop}>\r\n      <div className={s.Modal}>\r\n        <img src={largeImg} alt=\"\" />\r\n      </div>\r\n    </div>,\r\n    modalRoot\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n\r\nModal.prototype = {\r\n  largeImg: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","const API_KEY = \"23052937-32fb9bd6f4b84b12682be3748\";\r\nconst BASE_URL = `https://pixabay.com/api`;\r\n\r\nasync function fetchApi(nextQuery, nextPage) {\r\n  const url = `${BASE_URL}/?q=${nextQuery}&page=${nextPage}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\r\n  const response = await fetch(url);\r\n  return await response.json();\r\n}\r\nconst apiFirst = { fetchApi };\r\n\r\nexport default apiFirst;\r\n","// window.scrollTo({\r\n//   top: document.documentElement.scrollHeight,\r\n//   behavior: \"smooth\",\r\n// });\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Button.module.css\";\r\n\r\nfunction Button({ handleButtonLoadMore }) {\r\n  // window.scrollTo({\r\n  //   top: document.documentElement.scrollHeight,\r\n  //   behavior: \"smooth\",\r\n  // });\r\n  return (\r\n    <button type=\"button\" className={s.Button} onClick={handleButtonLoadMore}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.prototype = {\r\n  handleButtonLoadMore: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport s from \"./Spinner.module.css\";\r\n\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nfunction Spinner() {\r\n  return (\r\n    <Loader\r\n      className={s.Loader}\r\n      type=\"Puff\"\r\n      color=\"#00BFFF\"\r\n      height={100}\r\n      width={100}\r\n      timeout={3000} //3 secs\r\n    />\r\n  );\r\n}\r\n\r\nexport default Spinner;\r\n","import \"./App.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Searchbar from \"./components/Searchbar\";\r\nimport ImageGallery from \"./components/ImageGallery\";\r\nimport Modal from \"./components/Modal\";\r\nimport API from \"./services/img-api\";\r\nimport Button from \"./components/Button\";\r\nimport Spinner from \"./components/Spinner\";\r\n\r\nfunction App() {\r\n  const [page, setPage] = useState(1);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [data, setData] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [largeImg, setLargeImg] = useState(\"\");\r\n  const [status, setStatus] = useState(\"idle\");\r\n  const [error, setError] = useState(null);\r\n\r\n  console.log(error);\r\n\r\n  // Сброс страницы в 1\r\n  const resetPage = () => {\r\n    setPage(1);\r\n    setData([]);\r\n    setShowModal(false);\r\n    setStatus(\"idle\");\r\n  };\r\n\r\n  // Запрос пользователя по поиску\r\n  const handleFormSubmit = (query) => {\r\n    // console.log(query);\r\n    resetPage();\r\n    setQuery(query);\r\n  };\r\n\r\n  // Кнопка показать еще\r\n  const handleButtonLoadMore = () => {\r\n    console.log(\"Кнопка показать болше\");\r\n    // console.log(this.state.page);\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: \"smooth\",\r\n    });\r\n\r\n    setPage((page) => page + 1);\r\n  };\r\n\r\n  // По клику на картинку открывается модалка с большим изображением\r\n  const handleClickImg = (e) => {\r\n    // console.log(this.state.largeImg);\r\n    const imgForModal = e.currentTarget.alt;\r\n    console.log(imgForModal);\r\n    setShowModal(true);\r\n    setLargeImg(imgForModal);\r\n    // console.log(e.currentTarget.alt);\r\n    console.log(largeImg);\r\n    console.log(\"Modal\");\r\n  };\r\n\r\n  const toggleModal = () => {\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (query === \"\") {\r\n      return;\r\n    }\r\n\r\n    console.log(query);\r\n\r\n    setStatus(\"pending\");\r\n\r\n    API.fetchApi(query, page)\r\n      .then(({ hits }) => {\r\n        setData([\r\n          ...data,\r\n          ...hits.map(({ id, webformatURL, largeImageURL }) => ({\r\n            id,\r\n            webformatURL,\r\n            largeImageURL,\r\n          })),\r\n        ]);\r\n      })\r\n      .catch((error) => setError(error))\r\n      .finally(() => setStatus(\"resolved\"));\r\n  }, [query, page]);\r\n\r\n  window.scrollTo({\r\n    top: document.documentElement.scrollHeight,\r\n    behavior: \"smooth\",\r\n  });\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Searchbar onSubmit={handleFormSubmit} />\r\n\r\n      {status === \"idle\" && <h2>Enter your request.</h2>}\r\n\r\n      {data.length > 0 && (\r\n        <ImageGallery data={data} handleClickImg={handleClickImg} />\r\n      )}\r\n\r\n      {data.length >= 12 && status === \"resolved\" && (\r\n        <Button handleButtonLoadMore={handleButtonLoadMore} />\r\n      )}\r\n\r\n      {showModal && <Modal largeImg={largeImg} onClick={toggleModal} />}\r\n\r\n      {status === \"pending\" && <Spinner />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__K_QwB\",\"ImageGalleryItem\":\"ImageGallery_ImageGalleryItem__2Jixn\"};"],"sourceRoot":""}